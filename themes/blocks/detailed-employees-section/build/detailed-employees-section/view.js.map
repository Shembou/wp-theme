{"version":3,"file":"detailed-employees-section/view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAChD,MAAMC,eAAe,GAAGF,QAAQ,CAACG,aAAa,CAAC,6BAA6B,CAAC;EAC7E,IAAI,CAACD,eAAe,EAAE;EAEtB,MAAME,cAAc,GAAGF,eAAe,CAACC,aAAa,CAAC,kBAAkB,CAAC;EACxE,MAAME,eAAe,GAAGD,cAAc,CAACD,aAAa,CAAC,YAAY,CAAC;EAClE,MAAMG,cAAc,GAAGF,cAAc,CAACD,aAAa,CAAC,YAAY,CAAC;EACjE,MAAMI,WAAW,GAAGH,cAAc,CAACD,aAAa,CAAC,2BAA2B,CAAC;EAE7E,MAAMK,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACR,eAAe,CAACS,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;EACnF,IAAIC,YAAY,GAAGC,QAAQ,CAACR,eAAe,CAACS,SAAS,CAACC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACvF,MAAMC,UAAU,GAAGJ,QAAQ,CAACR,eAAe,CAACS,SAAS,CAACC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEnF,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACnB;IACAV,SAAS,CAACW,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACnC,IAAIA,KAAK,GAAGT,YAAY,EAAE;QACtBQ,QAAQ,CAACE,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC,CAAC;MACjC,CAAC,MAAM;QACHH,QAAQ,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC,CAAC;MACrC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAIhB,WAAW,EAAE;MACb,MAAMiB,UAAU,GAAIZ,YAAY,GAAGK,UAAU,GAAI,GAAG;MACpDV,WAAW,CAACe,KAAK,CAACG,KAAK,GAAG,GAAGD,UAAU,GAAG;IAC9C;IAEA,IAAInB,eAAe,EAAE;MACjBA,eAAe,CAACS,SAAS,GAAG,GAAGF,YAAY,MAAMK,UAAU,EAAE;IACjE;;IAEA;IACA,IAAIL,YAAY,IAAIK,UAAU,EAAE;MAC5Bb,cAAc,CAACkB,KAAK,CAACC,OAAO,GAAG,MAAM;IACzC;EACJ,CAAC;;EAED;EACA,IAAIjB,cAAc,EAAE;IAChBA,cAAc,CAACL,gBAAgB,CAAC,OAAO,EAAE,MAAM;MAC3CW,YAAY,GAAGc,IAAI,CAACC,GAAG,CAACf,YAAY,GAAG,CAAC,EAAEK,UAAU,CAAC,CAAC,CAAC;MACvDC,QAAQ,CAAC,CAAC;IACd,CAAC,CAAC;EACN;;EAEA;EACAA,QAAQ,CAAC,CAAC;AACd,CAAC,CAAC,C","sources":["webpack://detailed-employees-section/./src/detailed-employees-section/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const employeeSection = document.querySelector('#detailed-employees-section');\n    if (!employeeSection) return;\n\n    const tooltipWrapper = employeeSection.querySelector('.tooltip-wrapper');\n    const tooltipContents = tooltipWrapper.querySelector('.tooltip p');\n    const loadMoreButton = tooltipWrapper.querySelector('.load-more');\n    const progressBar = tooltipWrapper.querySelector('.progress-bar-wrapper div');\n\n    const employees = Array.from(employeeSection.querySelectorAll('.employee-wrapper'));\n    let currentLimit = parseInt(tooltipContents.innerHTML.match(/^(.*)\\s*\\/\\s*/)[1].trim());\n    const totalLimit = parseInt(tooltipContents.innerHTML.match(/\\/\\s*(.*)/)[1].trim());\n\n    const updateUI = () => {\n        // Show employees up to the current limit\n        employees.forEach((employee, index) => {\n            if (index < currentLimit) {\n                employee.style.display = ''; // Make visible\n            } else {\n                employee.style.display = 'none'; // Hide if out of range\n            }\n        });\n\n        // Update progress bar and tooltip text\n        if (progressBar) {\n            const percentage = (currentLimit / totalLimit) * 100;\n            progressBar.style.width = `${percentage}%`;\n        }\n\n        if (tooltipContents) {\n            tooltipContents.innerHTML = `${currentLimit} / ${totalLimit}`;\n        }\n\n        // Hide tooltip section when all employees are visible\n        if (currentLimit >= totalLimit) {\n            tooltipWrapper.style.display = 'none';\n        }\n    };\n\n    // Event listener for \"Load More\" button\n    if (loadMoreButton) {\n        loadMoreButton.addEventListener('click', () => {\n            currentLimit = Math.min(currentLimit + 5, totalLimit); // Increase current limit\n            updateUI();\n        });\n    }\n\n    // Initial UI update\n    updateUI();\n});\n"],"names":["document","addEventListener","employeeSection","querySelector","tooltipWrapper","tooltipContents","loadMoreButton","progressBar","employees","Array","from","querySelectorAll","currentLimit","parseInt","innerHTML","match","trim","totalLimit","updateUI","forEach","employee","index","style","display","percentage","width","Math","min"],"sourceRoot":""}